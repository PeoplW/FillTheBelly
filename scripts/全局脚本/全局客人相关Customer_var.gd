extends Node


var 当前出现客人数量 : int = 0
var 当前进入的客人数量: int = 0
var 当前排队客人数量: int = 0

var 当前室外客人预消失目标位置 : Node = null
var 当前室外客人排队目标位置 : Node = null

var 进门随机数 :int 
signal 进门信号
signal 门外排队信号




var 室内排队人数 = 0

var 室外排队人数 = 0

var 当前排队人数 = 0

#顾客生成所需变量
@onready var 客人生成计时器 = get_tree().get_root().get_node("主游戏场景（集成子场景）").get_node("计时器").get_node("客人生成计时器")
#室内排队参数
var 顾客1出现随机数
var 顾客1名称
var 顾客1进门概率
var 顾客2出现随机数
var 顾客2名称
var 顾客2进门概率
var 顾客图片1
var 顾客图片2
var 顾客数量随机数
var 顾客数量

#室外排队参数
var 室外排队顾客1出现随机数
var 室外排队顾客1名称
var 室外排队顾客1进门概率
var 室外排队顾客2出现随机数
var 室外排队顾客2名称
var 室外排队顾客2进门概率
var 室外排队顾客图片1
var 室外排队顾客图片2
var 室外排队顾客数量随机数
var 室外排队顾客数量






var 新顾客 = {
	"顾客名称" = 0,
	"进门概率" = 0,
	"叫号牌" = 0
}

##########
var 顾客列表 = []

var 当日顾客列表 = []



#客人相关变量
var 进门概率 = {
	"客人test" = 60 ,
	"娜美" = 40 ,
	"山治" = 50 ,
	"弗兰奇" = 70 ,
	"月光莫利亚" = 20 ,
	"明哥" = 30 ,
}


var 顾客状态 = {
	"顾客名称" : {
		"客人test" = "客人test" ,
		"娜美" = "娜美" ,
		"山治" = "山治" ,
		"弗兰奇" = "弗兰奇" ,
		"月光莫利亚" = "月光莫利亚" ,
		"明哥" = "明哥" ,
	} ,
	"进门概率" :{
		"客人test" = 60 ,
		"娜美" = 40 ,
		"山治" = 50 ,
		"弗兰奇" = 70 ,
		"月光莫利亚" = 20 ,
		"明哥" = 30 ,
	}
}



var 当日客人记录 = {
	
}

var 当日叫号数量 :int  = 0

var 叫号  = {       
	"0" = 0 ,
	
}


func _ready() -> void:
	await get_tree().create_timer(1.0).timeout
	客人生成计时器.connect("timeout", Callable(self, "新顾客生成控制"))


func 新顾客生成控制():
	print("全局判断开始")
	if 室内排队人数 < 4 :
		print("室内排队判断开始")
		新进门顾客生成()
	elif 室内排队人数 == 4 and  室外排队人数 < 3:
		print("室外排队判断开始")
		室外排队顾客生成()
	else :
		print("室内外都排不下了")
		pass


func 新进门顾客生成():
	print("室内排队开始")
	进门随机数 = randi() % 100
	顾客1出现随机数 = randi() % 顾客列表.size()
	顾客1名称 = 顾客列表[顾客1出现随机数].name
	顾客1进门概率 = 进门概率[str(顾客1名称)]
	进门随机数 = randf_range(0,100)
	顾客图片1 = load("res://assets/character/客人/%s.png" % 顾客1名称 )
	print("顾客名 ",顾客1名称)
	#随机顾客数量，两人一起的概率较小
	顾客数量随机数 = randf_range(0,100)
	print("进门随机数是 ",进门随机数,"  顾客1",顾客1名称,"的进门概率是 ",顾客1进门概率)
	if 进门随机数 <= 顾客1进门概率  :
		emit_signal("进门信号")
		室内排队人数 += 1
		进入顾客列表()
	



func 室外排队顾客生成():
	print("室外排队开始")
	进门随机数 = randi() % 100
	室外排队顾客1出现随机数 = randi() % 顾客列表.size()
	室外排队顾客1名称 = 顾客列表[室外排队顾客1出现随机数].name
	室外排队顾客1进门概率 = 进门概率[str(室外排队顾客1名称)]
	进门随机数 = randf_range(0,100)
	室外排队顾客图片1 = load("res://assets/character/客人/%s.png" % 室外排队顾客1名称 )
	print("室外排队顾客名 ",室外排队顾客1名称)
	#随机顾客数量，两人一起的概率较小
	室外排队顾客数量随机数 = randf_range(0,100)
	print("进门随机数是 ",进门随机数,"  室外排队顾客1",室外排队顾客1名称,"的进门概率是 ",室外排队顾客1进门概率)
	if 进门随机数 <= 室外排队顾客1进门概率 :
		emit_signal("门外排队信号")
		室外排队人数 += 1
		门外排队顾客列表()





func 进入顾客列表():
	var 新顾客生成 = {
		"顾客名称" = 0,
		"进门概率" = 0,
		"叫号牌" = 0,
	}
	当日叫号数量 += 1
	新顾客生成["顾客名称"] = 顾客状态["顾客名称"][str(顾客1名称)]
	新顾客生成["进门概率"] = 顾客状态["进门概率"][str(顾客1名称)]
	新顾客生成["叫号牌"] = 当日叫号数量
	新顾客["顾客名称"] = 新顾客生成["顾客名称"]
	新顾客["进门概率"] = 新顾客生成["进门概率"]
	当日顾客列表.append(新顾客生成)
	print(当日顾客列表)
	if 顾客数量随机数 <= 5 :
		顾客数量 = 2
		顾客2出现随机数 = randi() % 顾客列表.size()
		顾客2名称 = 顾客列表[顾客2出现随机数].name
		进门随机数 = randf_range(0,100)
		顾客图片2 = load("res://assets/character/客人/%s.png" % 顾客2名称 )
	else :
		顾客数量 = 1
	print("室内排队结束")

func 门外排队顾客列表():
	var 新顾客生成 = {
		"顾客名称" = 0,
		"进门概率" = 0,
		"叫号牌" = 0,
	}
	当日叫号数量 += 1
	新顾客生成["顾客名称"] = 顾客状态["顾客名称"][str(室外排队顾客1名称)]
	新顾客生成["进门概率"] = 顾客状态["进门概率"][str(室外排队顾客1名称)]
	新顾客生成["叫号牌"] = 当日叫号数量
	新顾客["顾客名称"] = 新顾客生成["顾客名称"]
	新顾客["进门概率"] = 新顾客生成["进门概率"]
	当日顾客列表.append(新顾客生成)
	print(当日顾客列表)
	if 顾客数量随机数 <= 5 :
		顾客数量 = 2
		室外排队顾客2出现随机数 = randi() % 顾客列表.size()
		室外排队顾客2名称 = 顾客列表[室外排队顾客2出现随机数].name
		进门随机数 = randf_range(0,100)
		室外排队顾客图片2 = load("res://assets/character/客人/%s.png" % 室外排队顾客2名称 )
	else :
		顾客数量 = 1
	print("室外排队结束")
